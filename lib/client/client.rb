module Client
  class Client
    include Path
    include Contraindications
    include Registration
    include Options
    #include Payment::Course
    include Faq

    def initialize(bot:, message:)
      @bot = bot
      @message = message
      @chat_id = message.from.id
      @info = info
    end

    def perform
      return send_course_and_invoice if @message.is_a? Telegram::Bot::Types::CallbackQuery
      return unless @message.is_a? Telegram::Bot::Types::Message

      case @message.text
      when /–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ /
        russian_date = @message.text.sub('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ ', '')
        slot = MongoClient.find_slot_by_russian_date(russian_date)
        return no_slot unless slot

        if slot['state'] == 'reserved'
          send_message(chat_id: @chat_id, text: '–ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–∞–Ω–Ω—ã–π —Å–ª–æ—Ç —É–∂–µ –∑–∞–Ω—è—Ç :(')
        elsif Time.now.utc.to_i > slot['unix_timestamp']
          send_message(chat_id: @chat_id, text: '–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —ç—Ç–æ—Ç —Å–ª–æ—Ç —É–∂–µ –≤—ã—à–ª–æ')
        else
          user = MongoClient.user_info(@chat_id)
          unix_timestamp = MongoClient.reserve_via_date_time(
            date: slot['date'],
            time: slot['time'],
            link: "<a href=\"tg://user?id=#{user['id']}\">#{user['name']}</a>",
            username: @message.from.username,
            id: @chat_id
          )
          result = GoogleCalendar.add_event_to_calendar(unix_timestamp, "–ú–∞—Å—Å–∞–∂ #{user['name']}", "t.me/#{user['username']}")
          username = @message.from.username ? '' : "@#{@message.from.username} "
          MongoClient.add_calendar_event_id({ unix_timestamp: unix_timestamp }, result.id) if result
          send_message(chat_id: @chat_id, text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–∏—Å—å, @alicekoala –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –≤–∞—Å –Ω–∞ –º–∞—Å—Å–∞–∂. –ó–∞ –¥–µ–Ω—å –¥–æ –º–∞—Å—Å–∞–∂–∞ –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ –Ω–µ–º')
          send_message(chat_id: @chat_id, text: 'üöò–¢–∞–∫–∂–µ —Å–æ–æ–±—â–∞–µ–º –≤–∞–º, —á—Ç–æ –º—ã –ø–µ—Ä–µ–µ—Ö–∞–ª–∏, –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ /location')
          send_message(chat_id: MASTER_ID, text: "<a href=\"tg://user?id=#{user['id']}\">#{user['name']}</a> #{username}–∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ –º–∞—Å—Å–∞–∂ #{russian_date}", parse_mode: 'HTML')
        end
        show_options
      when '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å', '/schedule'
        #send_message(chat_id: @chat_id, text: '–ê–ª–∏—Å–∞ —É–µ—Ö–∞–ª–∞ –∏–∑ –ú–æ—Å–∫–≤—ã –¥–æ –Ω–∞—á–∞–ª–∞ –º–∞—Ä—Ç–∞. –ê –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ö–æ—Ä–æ—à–∏–π –º–∞—Å—Å–∞–∂ –≤ –µ—ë –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ, —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ <a href="https://t.me/timetojmakjmak/273">—Ç—É—Ç</a>', parse_mode: 'HTML')
        send_schedule
        send_message(chat_id: @chat_id, text: 'üöò–¢–∞–∫–∂–µ —Å–æ–æ–±—â–∞–µ–º –≤–∞–º, —á—Ç–æ –º—ã –ø–µ—Ä–µ–µ—Ö–∞–ª–∏, –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ /location')
      when '–°—Ö–µ–º–∞ –ø—Ä–æ–µ–∑–¥–∞', '/location'
        send_path
        show_options
      when '–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è', '/contraindications'
        send_contraindications
        show_options
      when '–ú–æ–∏ –∑–∞–ø–∏—Å–∏', '/appointments'
        show_my_appointments
        show_options
      when '–ù–∞–∑–∞–¥'
        show_options
      when '–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤—Ä–µ–º—è', '/costtime'
        send_message_and_options(about_cost_and_time)
      when '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å', '/cancel'
        send_message_and_options('–î–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–∞—Å—Ç–µ—Ä—É @alicekoala')
      when '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', '/certificate'
        send_message_and_options(about_sertificate)
      when '–ö—É—Ä—Å—ã –º–∞—Å—Å–∞–∂–∞', '/courses'
        send_courses
      when '–í–æ–ø—Ä–æ—Å—ã –æ –º–∞—Å—Å–∞–∂–µ', '/faq'
        send_faq
        show_options
      when '/start'
        not_registred? ? greetings : show_options
      else
        if not_registred?
          MongoClient.add_user(id: @chat_id, name: @message.text.strip, username: @message.from.username)
          send_message(chat_id: @chat_id, text: "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, #{@message.text.strip}")
        else
          send_message(chat_id: @chat_id, text: '–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∫–æ–º–∞–Ω–¥ –Ω–∏–∂–µ')
        end
        show_options
      end
    end

    private

    def about_sertificate
      [
        "–ù–∞ –º–∞—Å—Å–∞–∂ –º–æ–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–π—Ç–∏, –Ω–æ –∏ –ø–æ–¥–∞—Ä–∏—Ç—å –µ–≥–æ –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É.",
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–∞—Ä–∏–≤–∞–µ–º–æ–º—É —á–µ–ª–æ–≤–µ–∫—É.",
        "",
        "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è ‚Äî 12 –º–µ—Å—è—Ü–µ–≤ –≤ —Å –¥–∞—Ç—ã –ø–æ–∫—É–ø–∫–∏.",
        "–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –µ–≥–æ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ @alicekoala üê®"
      ].join("\n")
    end

    def about_cost_and_time
      ["<b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b>", about_cost, "", "<b>–í—Ä–µ–º—è</b>", about_time].join("\n")
    end

    def about_cost
      [
        "3600—Ä  –∑–∞ —á–∞—Å –º–∞—Å—Å–∞–∂–∞",
        "75 –º–∏–Ω—É—Ç ‚Äî 4500",
        "90 –º–∏–Ω—É—Ç ‚Äî 5400",
        "2 —á–∞—Å–∞ ‚Äî 6500",
        "3 —á–∞—Å–∞ ‚Äî 9000, –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Å–µ–∞–Ω—Å–æ–≤ —è –¥–µ–ª–∞—é —Ü–µ–Ω—É –Ω–∏–∂–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–µ –æ–Ω–∏ –æ—á–µ–Ω—å –Ω—Ä–∞–≤—è—Ç—Å—è.\n",
        "–í —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ –ø—Ä–∏–π—Ç–∏, —Ä–∞–∑–¥–µ—Ç—å—Å—è, –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ—Å–ª–µ –∏ –≤—ã–ø–∏—Ç—å —á–∞—é.",
        "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–µ–∞–Ω—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –º–∞—Å—Å–∞–∂ –≤—Å–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –¥–ª–∏—Ç—Å—è –ø–æ–ª—Ç–æ—Ä–∞ —á–∞—Å–∞, –∏–º–µ–Ω–Ω–æ –µ–≥–æ —è —Å–æ–≤–µ—Ç—É—é –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞.\n",
        "–ï—Å—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç, 6 —á–∞—Å–æ–≤ –º–∞—Å—Å–∞–∂–∞ —Å—Ç–æ—è—Ç 19 000 –≤–º–µ—Å—Ç–æ 21 600. –ï–≥–æ –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å –Ω–∞ —Å–µ–∞–Ω—Å—ã –ø–æ —á–∞—Å—É/–ø–æ–ª—Ç–æ—Ä–∞ –∏–ª–∏ –¥–≤–∞.",
        "–ê–±–æ–Ω–µ–º–µ–Ω—Ç –¥–µ–π—Å—Ç–≤—É–µ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞—á–∏–Ω–∞—è —Å –ø–µ—Ä–≤–æ–≥–æ —Å–µ–∞–Ω—Å–∞.\n",
        "–°–∫–∏–¥–∫–∏:",
        "1. –î–ª—è –±–æ–≥–∏–Ω—å, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞–ª–∏ –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞(–∏ –µ–º—É –º–µ–Ω—å—à–µ —Ç—Ä–µ—Ö –ª–µ—Ç) ‚Äî 90 –º–∏–Ω—É—Ç –º–∞—Å—Å–∞–∂–∞ –∑–∞ 4000, –ø–æ –∫–æ–¥—É –Ø –º–∞–º–∞",
        "2. –ï—Å–ª–∏ –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ –ª—é–±–æ–π –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, —É –≤–∞—Å –±—É–¥–µ—Ç —Å–∫–∏–¥–∫–∞ 10% –Ω–∞ –≤–∞—à —Å–ª–µ–¥—É—é—â–∏–π —Å–µ–∞–Ω—Å –º–∞—Å—Å–∞–∂–∞",
        "3. –ï—Å–ª–∏ –ø–æ –≤–∞—à–µ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏—à–µ–ª –¥—Ä—É–≥, –æ–Ω\–∞ –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É 10% –Ω–∞ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —Å–µ–∞–Ω—Å, –∏ –≤—ã —Ç–æ–∂–µ –ø–æ–ª—É—á–∞–µ—Ç–µ 10%"
      ].join("\n")
    end

    def about_time
      [
        "–ú–æ–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ –Ω–∞ 5-7 –º–∏–Ω—É—Ç —Ä–∞–Ω—å—à–µ, —Å–∏–ª—å–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ –Ω–µ –Ω—É–∂–Ω–æ.\n",
        "–ö –≤—Ä–µ–º–µ–Ω–∏ —Å–∞–º–æ–≥–æ –º–∞—Å—Å–∞–∂–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å 30 –º–∏–Ω—É—Ç, —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ –≤—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —á–∞—Å–æ–≤–æ–π –º–∞—Å—Å–∞–∂, –≤–µ—Å—å –≤–∏–∑–∏—Ç –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ –ø–æ–ª—É—Ç–æ—Ä–∞ —á–∞—Å–æ–≤\n",
        "–ï—Å–ª–∏ –≤—ã –æ–ø–∞–∑–¥—ã–≤–∞–µ—Ç–µ –±–æ–ª–µ–µ, —á–µ–º –Ω–∞ 10 –º–∏–Ω—É—Ç ‚Äî —Å–µ–∞–Ω—Å –±—É–¥–µ—Ç –∫–æ—Ä–æ—á–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Å—Ç—Ä–∞–¥–∞–ª–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –¥—Ä—É–≥–∏–µ –∫–ª–∏–µ–Ω—Ç—ã"
      ].join("\n")
    end

    def send_message_and_options(text)
      send_message(chat_id: @chat_id, text: text, parse_mode: 'HTML')
      show_options
    end

    def no_slot
      send_message(chat_id: @chat_id, text: '–î–∞–Ω–Ω—ã–π —Å–ª–æ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω, –∏–∑–≤–∏–Ω–∏—Ç–µ')
      show_options
    end

    def send_message(**data)
      @bot.api.send_message(**data)
    rescue Telegram::Bot::Exceptions::ResponseError => e
      return if e.error_code == '403'

      LOGGER.fatal('Caught exception;')
      LOGGER.fatal(e)
    end

    def show_options
      send_message(chat_id: @chat_id, text: '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup: client_options_keyboard)
    end

    def show_my_appointments
      appointments = MongoClient.show_users_appointments(@chat_id)
      if appointments != []
        text = appointments.map do |s|
          "#{s['russian_datetime']}"
        end.join("\n")
      else
        text = '–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π :('
      end
      @bot.api.send_message(chat_id: @chat_id, text: text)
    end

    def send_courses
      kb = []
      COURSES.each_with_index do |course, index|
        kb << Telegram::Bot::Types::InlineKeyboardButton.new(
          text: course.title,
          callback_data: "course_#{index}"
        )
      end
      markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: kb.each_slice(1).to_a)
      @bot.api.send_message(chat_id: @chat_id, text: '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:', reply_markup: markup)
    end

    def send_course_and_invoice
      course_id = @message.data.match(/\d+/)[0].to_i
      ::Client::Payments::Course.new(bot: @bot, chat_id: @chat_id, course_id: course_id).sell_course
    end

    def send_schedule
      return send_vacation if ENV['VACATION_DATE']

      slots = MongoClient.active_slots
      if slots != []
        kb = slots.map { |s| [Telegram::Bot::Types::KeyboardButton.new(text: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ #{s['russian_datetime']}")] }
        kb << [Telegram::Bot::Types::KeyboardButton.new(text: '–ù–∞–∑–∞–¥')]
        markup = Telegram::Bot::Types::ReplyKeyboardMarkup.new(keyboard: kb, one_time_keyboard: true)
        send_message(chat_id: @chat_id, text: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏:', reply_markup: markup)
      else
        send_message_and_options('–°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–µ—Ç :(')
      end
    end

    def send_vacation
      text = "–î–æ #{ENV['VACATION_DATE']} –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–µ–ª—å–∑—è, @alicekoala –≤ –æ—Ç–ø—É—Å–∫–µ. –ü–æ–∫–∞ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —É—Ä–æ–∫–∏ –ø–æ –º–∞—Å—Å–∞–∂—É –¥–æ–º–∞. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ —Å–ª–æ—Ç—ã ‚Äî –≤—ã —É–∑–Ω–∞–µ—Ç–µ –æ –Ω–∏—Ö –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏."
      send_message_and_options(text)
    end
  end
end
